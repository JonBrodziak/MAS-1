#if !defined(_asap3_)
#define _asap3_

class model_data : public ad_comm {
    int debug;
    int iyear;
    int iage;
    int ia;
    int ifleet;
    int ind;
    int i;
    int j;
    int k;
    int iloop;
    int io;
    double pi;
    double CVfill;
    data_int nyears;
    data_int year1;
    data_int nages;
    data_int nfleets;
    data_int nselblocks;
    data_int navailindices;
    data_matrix M;
    data_number isfecund;
    data_number fracyearSSB;
    data_matrix mature;
    data_int nWAAmatrices;
    int nrowsWAAini;
    data_matrix WAA_ini;
    int nWAApointbio;
    data_ivector WAApointbio;
    dmatrix fecundity;
    d3_array WAAcatchfleet;
    d3_array WAAdiscardfleet;
    dmatrix WAAcatchall;
    dmatrix WAAdiscardall;
    dmatrix WAAssb;
    dmatrix WAAjan1b;
    data_matrix sel_blocks;
    int nsel_ini;
    data_ivector sel_option;
    data_matrix sel_ini;
    int nselparm;
    dvector sel_initial;
    dvector sel_lo;
    dvector sel_hi;
    ivector sel_phase;
    dvector sel_lambda;
    dvector sel_CV;
    dvector sel_sigma2;
    dvector sel_sigma;
    dvector sel_like_const;
    data_ivector sel_start_age;
    data_ivector sel_end_age;
    data_int Freport_agemin;
    data_int Freport_agemax;
    data_int Freport_wtopt;
    data_int use_likelihood_constants;
    data_vector release_mort;
    data_matrix CAA_ini;
    data_matrix Discard_ini;
    data_matrix proportion_release_ini;
    d3_array CAA_obs;
    d3_array Discard_obs;
    d3_array proportion_release;
    d3_array CAA_prop_obs;
    d3_array Discard_prop_obs;
    double catch_prop_like_const;
    double discard_prop_like_const;
    dmatrix Catch_tot_fleet_obs;
    dmatrix Discard_tot_fleet_obs;
    dmatrix CAA_prop_obs_sum;
    dmatrix Discard_prop_obs_sum;
    dvector catch_tot_like_const;
    dvector discard_tot_like_const;
    int indavail;
    data_vector index_units_aggregate_ini;
    data_vector index_units_proportions_ini;
    data_ivector index_WAApoint_ini;
    data_vector index_month_ini;
    data_ivector index_sel_choice_ini;
    data_ivector index_sel_option_ini;
    data_ivector index_start_age_ini;
    data_ivector index_end_age_ini;
    data_ivector index_estimate_proportions_ini;
    data_ivector use_index;
    int nindexsel_ini;
    data_matrix index_sel_ini;
    data_matrix index_ini;
    int nindices;
    dvector index_units_aggregate;
    dvector index_units_proportions;
    ivector index_WAApoint;
    dvector index_month;
    dvector index_sel_option;
    dvector index_start_age;
    dvector index_end_age;
    dvector index_sel_choice;
    ivector index_nobs;
    ivector index_estimate_proportions;
    int nindexselparms;
    dmatrix index_time;
    dmatrix index_year;
    dmatrix index_obs;
    dmatrix index_cv;
    dmatrix index_sigma2;
    dmatrix index_sigma;
    dmatrix input_eff_samp_size_index;
    dvector indexsel_initial;
    dvector indexsel_lo;
    dvector indexsel_hi;
    ivector indexsel_phase;
    dvector indexsel_lambda;
    dvector indexsel_CV;
    dvector indexsel_sigma2;
    dvector indexsel_sigma;
    dvector indexsel_like_const;
    double index_prop_like_const;
    d3_array index_sel_input;
    d3_array index_prop_obs;
    d3_array index_WAA;
    dvector index_like_const;
    double tempsum;
    data_int phase_Fmult_year1;
    data_int phase_Fmult_devs;
    data_int phase_recruit_devs;
    data_int phase_N_year1_devs;
    data_int phase_q_year1;
    data_int phase_q_devs;
    data_int phase_SR_scaler;
    data_int phase_steepness;
    data_vector recruit_CV;
    dvector recruit_sigma2;
    dvector recruit_sigma;
    double SR_like_const;
    data_vector lambda_ind_ini;
    data_vector lambda_catch_tot;
    data_vector lambda_Discard_tot;
    data_matrix catch_tot_CV;
    data_matrix discard_tot_CV;
    dmatrix catch_tot_sigma2;
    dmatrix catch_tot_sigma;
    dmatrix discard_tot_sigma2;
    dmatrix discard_tot_sigma;
    data_matrix input_eff_samp_size_catch_ini;
    data_matrix input_eff_samp_size_discard_ini;
    dmatrix input_eff_samp_size_catch;
    dmatrix input_eff_samp_size_discard;
    double nfact_in;
    double nfact_out;
    data_vector lambda_Fmult_year1;
    data_vector Fmult_year1_CV;
    data_vector lambda_Fmult_devs;
    data_vector Fmult_devs_CV;
    data_number lambda_N_year1_devs;
    data_number N_year1_CV;
    data_number lambda_recruit_devs;
    data_vector lambda_q_year1_ini;
    data_vector q_year1_CV_ini;
    data_vector lambda_q_devs_ini;
    data_vector q_devs_CV_ini;
    data_number lambda_steepness;
    data_number steepness_CV;
    data_number lambda_SR_scaler;
    data_number SR_scaler_CV;
    dvector Fmult_year1_sigma2;
    dvector Fmult_year1_sigma;
    dvector Fmult_year1_like_const;
    dvector Fmult_devs_sigma2;
    dvector Fmult_devs_sigma;
    dvector Fmult_devs_like_const;
    double N_year1_sigma2;
    double N_year1_sigma;
    double N_year1_like_const;
    dvector lambda_ind;
    dvector lambda_q_year1;
    dvector q_year1_CV;
    dvector q_year1_sigma2;
    dvector q_year1_sigma;
    dvector q_year1_like_const;
    dvector lambda_q_devs;
    dvector q_devs_CV;
    dvector q_devs_sigma2;
    dvector q_devs_sigma;
    dvector q_devs_like_const;
    double steepness_sigma2;
    double steepness_sigma;
    double steepness_like_const;
    double SR_scaler_sigma2;
    double SR_scaler_sigma;
    double SR_scaler_like_const;
    data_int NAA_year1_flag;
    data_vector NAA_year1_ini;
    data_vector Fmult_year1_ini;
    data_vector q_year1_iniavail;
    dvector q_year1_ini;
    data_number is_SR_scaler_R;
    data_number SR_scaler_ini;
    data_number SR_steepness_ini;
    data_number Fmult_max_value;
    data_number ignore_guesses;
    double delta;
    data_int do_projections;
    data_ivector directed_fleet;
    data_number nfinalyear;
    int nprojyears;
    data_matrix project_ini;
    dvector proj_recruit;
    ivector proj_what;
    dvector proj_target;
    dvector proj_F_nondir_mult;
    data_int doMCMC;
    data_int MCMCnyear_opt;
    data_int MCMCnboot;
    data_int MCMCnthin;
    data_int MCMCseed;
    data_int fillR_opt;
    data_int Ravg_start;
    data_int Ravg_end;
    data_int make_Rfile;
    data_int test_value;
    double ntemp0;
    double SR_spawners_per_recruit;
    dvector s_per_r_vec;
    ~model_data();
    model_data(int argc, char * argv[]);
    friend class model_parameters;
public:
    void create_mas_data_file(std::string path);

};

class model_parameters : public model_data,
public function_minimizer {
public:
    ~model_parameters();
    void preliminary_calculations(void);
    void set_runtime(void);

    virtual void * mycast(void) {
        return (void*) this;
    }

    static int mc_phase(void) {
        return initial_params::mc_phase;
    }

    static int mceval_phase(void) {
        return initial_params::mceval_phase;
    }

    static int sd_phase(void) {
        return initial_params::sd_phase;
    }

    static int current_phase(void) {
        return initial_params::current_phase;
    }

    static int last_phase(void) {
        return (initial_params::current_phase
                >= initial_params::max_number_phases);
    }

    static prevariable current_feval(void) {
        return *objective_function_value::pobjfun;
    }
private:
    ivector integer_control_flags;
    dvector double_control_flags;
    param_init_bounded_number_vector sel_params;
    param_init_bounded_vector log_Fmult_year1;
    param_init_bounded_matrix log_Fmult_devs;
    param_init_bounded_dev_vector log_recruit_devs;
    param_init_bounded_vector log_N_year1_devs;
    param_init_bounded_vector log_q_year1;
    param_init_bounded_matrix log_q_devs;
    param_init_bounded_number_vector index_sel_params;
    param_init_bounded_number log_SR_scaler;
    param_init_bounded_number SR_steepness;
    param_vector sel_likely;
    param_vector sel_stdresid;
    param_number sel_rmse;
    param_number sel_rmse_nobs;
    param_number sum_sel_lambda;
    param_number sum_sel_lambda_likely;
    param_matrix indexsel;
    param_vector indexsel_likely;
    param_vector indexsel_stdresid;
    param_number indexsel_rmse;
    param_number indexsel_rmse_nobs;
    param_number sum_indexsel_lambda;
    param_number sum_indexsel_lambda_likely;
    param_matrix log_Fmult;
    param_matrix Fmult;
    param_matrix NAA;
    param_matrix temp_NAA;
    param_matrix temp_BAA;
    param_matrix temp_PAA;
    param_matrix FAA_tot;
    param_matrix Z;
    param_matrix S;
    param_matrix Catch_stdresid;
    param_matrix Discard_stdresid;
    param_matrix Catch_tot_fleet_pred;
    param_matrix Discard_tot_fleet_pred;
    param_3array CAA_pred;
    param_3array Discard_pred;
    param_3array CAA_prop_pred;
    param_3array Discard_prop_pred;
    param_3array FAA_by_fleet_dir;
    param_3array FAA_by_fleet_Discard;
    param_matrix sel_by_block;
    param_3array sel_by_fleet;
    param_vector temp_sel_over_time;
    param_number temp_sel_fix;
    param_number temp_Fmult_max;
    param_number Fmult_max_pen;
    param_matrix q_by_index;
    param_matrix temp_sel;
    param_vector temp_sel2;
    param_matrix index_pred;
    param_3array output_index_prop_obs;
    param_3array output_index_prop_pred;
    param_matrix index_Neff_init;
    param_matrix index_Neff_est;
    param_3array index_prop_pred;
    param_number new_Neff_catch;
    param_number new_Neff_discard;
    param_number ntemp;
    param_number SR_S0;
    param_number SR_R0;
    param_number SR_alpha;
    param_number SR_beta;
    param_vector S0_vec;
    param_vector R0_vec;
    param_vector steepness_vec;
    param_vector SR_pred_recruits;
    param_number likely_SR_sigma;
    param_vector SR_stdresid;
    param_number SR_rmse;
    param_number SR_rmse_nobs;
    param_vector RSS_sel_devs;
    param_vector RSS_catch_tot_fleet;
    param_vector RSS_Discard_tot_fleet;
    param_vector catch_tot_likely;
    param_vector discard_tot_likely;
    param_number likely_catch;
    param_number likely_Discard;
    param_vector RSS_ind;
    param_vector RSS_ind_sigma;
    param_vector likely_ind;
    param_matrix index_stdresid;
    param_number likely_index_age_comp;
    param_number fpenalty;
    param_number fpenalty_lambda;
    param_vector Fmult_year1_stdresid;
    param_number Fmult_year1_rmse;
    param_number Fmult_year1_rmse_nobs;
    param_vector Fmult_year1_likely;
    param_vector Fmult_devs_likely;
    param_matrix Fmult_devs_stdresid;
    param_vector Fmult_devs_fleet_rmse;
    param_vector Fmult_devs_fleet_rmse_nobs;
    param_number Fmult_devs_rmse;
    param_number Fmult_devs_rmse_nobs;
    param_number N_year1_likely;
    param_vector N_year1_stdresid;
    param_number N_year1_rmse;
    param_number N_year1_rmse_nobs;
    param_vector nyear1temp;
    param_vector q_year1_likely;
    param_vector q_year1_stdresid;
    param_number q_year1_rmse;
    param_number q_year1_rmse_nobs;
    param_vector q_devs_likely;
    param_matrix q_devs_stdresid;
    param_number q_devs_rmse;
    param_number q_devs_rmse_nobs;
    param_number steepness_likely;
    param_number steepness_stdresid;
    param_number steepness_rmse;
    param_number steepness_rmse_nobs;
    param_number SR_scaler_likely;
    param_number SR_scaler_stdresid;
    param_number SR_scaler_rmse;
    param_number SR_scaler_rmse_nobs;
    param_matrix effective_sample_size;
    param_matrix effective_Discard_sample_size;
    param_vector Neff_stage2_mult_catch;
    param_vector Neff_stage2_mult_discard;
    param_vector Neff_stage2_mult_index;
    param_vector mean_age_obs;
    param_vector mean_age_pred;
    param_vector mean_age_pred2;
    param_vector mean_age_resid;
    param_vector mean_age_sigma;
    param_number mean_age_x;
    param_number mean_age_n;
    param_number mean_age_delta;
    param_number mean_age_mean;
    param_number mean_age_m2;
    param_vector temp_Fmult;
    param_number tempU;
    param_number tempN;
    param_number tempB;
    param_number tempUd;
    param_number tempNd;
    param_number tempBd;
    param_number trefU;
    param_number trefN;
    param_number trefB;
    param_number trefUd;
    param_number trefNd;
    param_number trefBd;
    param_number Fref_report;
    param_number Fref;
    param_vector freftemp;
    param_vector nreftemp;
    param_vector Freport_U;
    param_vector Freport_N;
    param_vector Freport_B;
    param_stddev_vector Freport;
    param_stddev_vector TotJan1B;
    param_stddev_vector SSB;
    param_stddev_vector ExploitableB;
    param_stddev_vector recruits;
    param_matrix SSBfracZ;
    param_vector final_year_total_sel;
    param_vector dir_F;
    param_vector Discard_F;
    param_vector proj_nondir_F;
    param_vector proj_dir_sel;
    param_vector proj_Discard_sel;
    param_matrix proj_NAA;
    param_vector proj_Fmult;
    param_vector Ftemp;
    param_vector Ztemp;
    param_vector proj_TotJan1B;
    param_vector proj_SSB;
    param_number SSBtemp;
    param_number denom;
    param_matrix proj_F_dir;
    param_matrix proj_F_Discard;
    param_matrix proj_F_nondir;
    param_matrix proj_Z;
    param_matrix proj_SSBfracZ;
    param_matrix proj_catch;
    param_matrix proj_Discard;
    param_matrix proj_yield;
    param_vector proj_total_yield;
    param_vector proj_total_Discard;
    param_vector output_prop_obs;
    param_vector output_prop_pred;
    param_vector output_Discard_prop_obs;
    param_vector output_Discard_prop_pred;
    param_vector NAAbsn;
    param_number temp_sum;
    param_number temp_sum2;
    param_number A;
    param_number B;
    param_number C;
    param_number f;
    param_number z;
    param_number SPR_Fmult;
    param_number YPR_Fmult;
    param_number SPR;
    param_number SPRatio;
    param_number YPR;
    param_number S_F;
    param_number R_F;
    param_number slope_origin;
    param_number slope;
    param_number F30SPR;
    param_number F40SPR;
    param_number Fmsy;
    param_number F01;
    param_number Fmax;
    param_number F30SPR_report;
    param_number F40SPR_report;
    param_number F01_report;
    param_number Fmax_report;
    param_number Fcurrent;
    param_number F30SPR_slope;
    param_number F40SPR_slope;
    param_number Fmsy_slope;
    param_number F01_slope;
    param_number Fmax_slope;
    param_number Fcurrent_slope;
    param_number SSmsy;
    param_number tempR;
    param_vector tempFmult;
    param_stddev_number MSY;
    param_stddev_number SSBmsy_report;
    param_stddev_number Fmsy_report;
    param_stddev_number SSBmsy_ratio;
    param_stddev_number Fmsy_ratio;
    param_number prior_function_value;
    param_number likelihood_function_value;
    objective_function_value obj_fun;
public:
    virtual void userfunction(void);
    virtual void report(const dvector& gradients);
    virtual void final_calcs(void);
    model_parameters(int sz, int argc, char * argv[]);

    virtual void initializationfunction(void) {
    }
    void get_SR(void);
    void get_selectivity(void);
    void get_mortality_rates(void);
    void get_numbers_at_age(void);
    void get_Freport(void);
    void get_predicted_catch(void);
    void get_q(void);
    void get_predicted_indices(void);
    void get_proj_sel(void);
    void get_Fref(void);
    void get_Freport_ref(void);
    void get_YPR(void);
    void project_into_future(void);
    void get_SPR(void);
    void get_multinomial_multiplier(void);
    void get_log_factorial(void);
    void compute_the_objective_function(void);
    void write_MCMC(void);
    void create_mas_config_file(std::string path);

};
#endif
